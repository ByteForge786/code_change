import pandas as pd
from transformers import GPT2LMHeadModel, GPT2Tokenizer

# Load your CSV file into a DataFrame
df = pd.read_csv('input_data.csv')

# Display the first few rows to check the data
print(df.head())

# Load pre-trained model and tokenizer
model_name = "EleutherAI/gpt-neo-2.7B"
tokenizer = GPT2Tokenizer.from_pretrained(model_name)
model = GPT2LMHeadModel.from_pretrained(model_name)

# Function to generate new questions with the same output
def generate_augmented_data(row):
    original_question = row['Question']
    output_label = row['Output']

    inputs = tokenizer.encode(original_question, return_tensors="pt", max_length=512, truncation=True)
    outputs = model.generate(inputs, max_length=100, num_return_sequences=4, no_repeat_ngram_size=2, top_k=50, top_p=0.95, temperature=0.7)

    augmented_data = []
    for output in outputs:
        generated_question = tokenizer.decode(output, skip_special_tokens=True)
        augmented_data.append({'Question': generated_question, 'Output': output_label})

    return augmented_data

# Iterate through each row, generate new questions, and append to the DataFrame
augmented_rows = []
for index, row in df.iterrows():
    augmented_rows.extend(generate_augmented_data(row))

# Create a new DataFrame with augmented data
augmented_df = pd.DataFrame(augmented_rows)

# Save the augmented DataFrame to a new CSV file
augmented_df.to_csv('augmented_data.csv', index=False)
